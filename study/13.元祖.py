'''
   元祖 tuple
'''
# 1.创建一个元祖
tp = (1, 2, 3)
print(type(tp))

# 2.可以创建任何数据类型的元祖
tp1 = (123, '梁枫', [1, 2, 3, 4])
print(tp1)
print(type(tp1))

# 3.访问元祖中的元素可以用切片的方式去访问
# 元祖的索引和切片操作和列表，字符串是类似的
a = (1, 2, 3.14, 'hello', [7,8,9])
a[0]    # 就是 1
a[1]    # 就是 2
a[4]    # 就是 [7,8,9]
a[-1]   # 也是 [7,8,9]
a[-4]   # 也是 2
a[-1][0]  # a[-1] 是[7,8,9],  a[-1][0] 就是 [7,8,9] 里面的第一个元素，就是 7
# 元祖的切片也和字符串类似，想通用刀去却取其中的一部分，该在哪里下刀就使用哪里的索引
a = (1, 2, 3.14, 'hello', [7,8,9])
a[0:3]      # 结果是   (1, 2, 3.14)
a[:3]       # 结果也是 (1, 2, 3.14)
a[3:5]      # 结果是   ('hello', [7,8,9])
a[3:]       # 结果也是 ('hello', [7,8,9])
a[-1][:2]   # 结果是   [7,8]   为什么？ 自己想一想
# 4.元祖还可以进行判断
if 'hello' in a:  # 判断hello字段在a中有没有
    print('存在')
else:
    print('不存在')

# 5. 元祖常用的其他函数
print(len(tp2))  # 统计长度
tp3 = (1, 2, 3, 4)
print(type(list(tp3)))  # 把元祖强制转换成列表

# 6.元祖里面的元素不可以删除，但可以删除整个元祖
tp4 = (123, '梁枫', [1, 2, 3])
# del tp4
print(tp4)  #因为上面 def tp4 删除这个tp4元祖了，所以我们打印不出来这个tp4，没有这个名字
